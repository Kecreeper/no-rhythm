/*
First time? Check out the tutorial game:
https://sprig.hackclub.com/gallery/getting_started

@title: No Rhythm
@author: Eduardo
@tags: []
@addedOn: 2024-00-00
*/

const player = "p"
const blackPixel = "b"
const yellowPixel = "y"

setLegend(
  [player, bitmap`
................
................
................
................
................
................
................
................
066..........6F0
066..........6F0
066..........6F0
0F66........6FF0
.0F66......66F0.
..0F6666666FF0..
...0FFFFFFFF0...
....00000000....`],
  [yellowPixel, bitmap`
6666666666666666
6666666666666666
6666666666666666
6666666666666666
6666666666666666
6666666666666666
6666666666666666
6666666666666666
6666666666666666
6666666666666666
6666666666666666
6666666666666666
6666666666666666
6666666666666666
6666666666666666
6666666666666666`],
  [blackPixel, bitmap`
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000`]
)

const level = map`
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
.............................................................
p............................................................`
setMap(level)

function drawX(xTable, y, pixel, offset) {
  if (offset == null){
    offset = [0, 0]
  }
  
  let x1 = xTable[0] + offset[0]
  let x2 = xTable[1] + offset[0]
  y = y + offset[1]
  let xLength = x2 - x1 + 1

  for (i = 0; i < xLength; i++) {
    addSprite(x1+i, y, pixel)
  }
}

function drawY(x, yTable, pixel, offset) {
  if (offset == null){
    offset = [0, 0]
  }
  
  let y1 = yTable[0] + offset[1]
  let y2 = yTable[1] + offset[1]
  x = x + offset[0]
  let yLength = y2 - y1 + 1

  for (i = 0; i < yLength; i++) {
    addSprite(x, y1+i, pixel)
  }
}

function addSprite2(x, y, pixel, offset){
  if (offset == null){
    offset = [0, 0]
  }

  addSprite(x + offset[0], y + offset[1], pixel)
}

function getTilesX(y, x1, x2) {
  let xLength = x2 - x1 + 1
  let lines = []
  for (i = 0; i < xLength; i++) {
    lines.push(getTile(x1+i, y)[0])
  }
  return lines
}

function getTilesY(x, y1, y2) {
  let yLength = y2 - y1 + 1
  let lines = []
  for (i = 0; i < yLength; i++) {
    lines.push(getTile(x, y1+i)[0])
  }
  return lines
}

function getTile2(x, y, offset) {
  if (offset == null){
    offset = [0, 0]
  }

  return getTile(x + offset[0], y + offset[1])
}
  
function makeCircle(pixel, offset) {
  if (offset == null){
    offset = [0, 0]
  }

  drawY(27, [29, 31], pixel, offset) // left line
  addSprite2(28, 28, pixel, offset)
  
  drawY(33, [29, 31], pixel, offset) // right line
  addSprite2(32, 32, pixel, offset)

  drawX([29, 31], 27, pixel, offset) // top line
  addSprite2(32, 28, pixel, offset)
  
  drawX([29, 31], 33, pixel, offset)// bottom line
  addSprite2(28, 32, pixel, offset)

  
  let table1 = [
    getTile2(28, 28, offset)[0],
    getTile2(32, 32, offset)[0],
    getTile2(32, 28, offset)[0],
    getTile2(28, 32, offset)[0],
  ]
  
  let table2 = getLineOfTilesAlongY(33, 29, 31)
  let finalTable = table1.concat(table2)
  return table1
  

  /*
  return yCircle = [
    // getTile(33+offsetX, 29+offsetY)[0],
    // getTile(33+offsetX, 30+offsetY)[0],
    // getTile(33+offsetX, 31+offsetY)[0],
    getTile(32+offsetX, 32+offsetY)[0],
    getTile(31+offsetX, 33+offsetY)[0],
    getTile(30+offsetX, 33+offsetY)[0],
    getTile(29+offsetX, 33+offsetY)[0],
    getTile(28+offsetX, 32+offsetY)[0],
    getTile(27+offsetX, 31+offsetY)[0],
    getTile(27+offsetX, 30+offsetY)[0],
    getTile(27+offsetX, 29+offsetY)[0],
    getTile(28+offsetX, 28+offsetY)[0],
    getTile(29+offsetX, 27+offsetY)[0],
    getTile(30+offsetX, 27+offsetY)[0],
    getTile(31+offsetX, 27+offsetY)[0],
    getTile(32+offsetX, 28+offsetY)[0],
  ]*/
}

let blackCircle = makeCircle(blackPixel)
// let yellowCircle = makeCircle(0, -27, yellowPixel)

function moveRight(table, magnitude){
  for (let i = 0; i < table.length; i++){

    
    
    table[i].x += magnitude
  }
}

function moveLeft(table, magnitude){
  for (let i = 0; i < table.length; i++){
    table[i].x -= magnitude
  }
}


onInput("d", function(){
  moveRight(blackCircle, 1)
})

onInput("a", function(){
  moveLeft(blackCircle, 1)
})